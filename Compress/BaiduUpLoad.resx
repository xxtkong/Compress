<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAAAAABoBQAANgAAACAgAAAAAAAAqAgAAJ4FAAAwMAAAAAAAAKgOAABGDgAAKAAAABAA
        AAAgAAAAAQAIAAAAAABAAQAAAAAAAAAAAAAAAAAAAAAAAL9ZAADLZAAAz2kAANNtAADUbgAA2HEAANx2
        AADeeAAA4nsAAOeAAADshQAA74gAAPGLAAD0jQAA9Y8AAPaQAAD5kgAA/JUAAP2XAAD+mQAA/5kCAPiT
        AwDxjAQArS8GADYXCAD/nAoAnTwLAPubEABwNhEA/58RAHktEgB9MRYAgj8aAP+jGgD9ox0A/6cjAH1A
        JQCBRSUAdTsmAIZJJgCMTScAcj0oALNDKgD/qiwAkEItALtlLQB5STAAulIzAP+vNwDMdjgAz3o4AHBJ
        OQCwYTkAz3o5ANZ8OQDwfjkA8oE+AG9OQAD/skAAnFNCALVrRgD/tkgAt25KAO+ITABNTU0A/7xYAO6N
        WQDsj2EAu4ZlAPq7awDKj20A65dvANSVcADkrHIA4ZN0AM+YdADNhHcA3ax5ANWgewDRoHwAy5d9AM2b
        ggDbqIMAz6CIAOK2jADSpI4A0qWOAMuejwDTp5AA06iSALabkwDYrJQA5bqUAOzAlADOo5YA5r+aAK6m
        mwDXr5sA0KidANiwnQBZcp4A8cqfANyooADZs6AA6sSgANq0ogDTr6QAz7SmANu3pgDbuKYA3LinAEl7
        qQDcuqkA2bmqANa1rADvzawA/NyuAHOcrwD0z68A2a6zAOHCswDixLUAs6y3AOPHuQD02LkAnKC7AOzR
        uwDx07sA5Mm8AOfQwwDy2sMA+eLFAOjSxgD12cYA9t/GAOnTyAD34ckA6tbLAOXHzgDs2tAA7dvSAO3c
        0wDv3tYA8OHZAInL2gDx5N0A9OjjAPTq5AD16+UA9+7qAPvy6gD69PEAAAAAAP///wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYmJiYmJhAQEBAmJiYmJiYmJiYmJhA
        HyYzQEBAQJiYmJiYmJhAABpMLxceKTlAQJiYmJhAAwE0i4F4bFAqLECYmJhABwgCPI+JgG1jVVdAmJiY
        MQsJBD6SjGBaUVleQJiYmDINCgUulY99emRnYkCYmJg1EAwGGJeTjYR5bmpAmJiYNhIPCE9UTV9la3Fy
        QJiYmDcUEUWZhn92RCAcO0CYmJg4HRMWlpaFW1NYRiSYmJiYPyMZDn5dSFNWYUslmJiYmEIwIRWCkZB1
        b2lOJ5iYmJhDPSsbiJSOh3twUiiYmJiYR0E6InSDfHNoXEktmJiYmEpKSmZ3indSTkpGmJiY/D+9vfgH
        v7/wAcrL4AEkEcABJDPAAVFVwAFybsABvb3AAb29wAG2vMADxsrAAx8QwAMhcsADc3LAA3BuwAe9vSgA
        AAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAAD///8A//z5AP769QD69fMA+vTwAP7z
        6QD48O0A9u7qAPbs6AD979wA9ermAPTo4wDz5uAA9OfaAPnm1wD859IA8ePcAPDg2AD8480A797WAPPd
        zQD23skA7dvSAO3a0QDs2dAA9N3DAOvYzgD31sgA69bMAPvavADq1coA6tTJAO7UwgDo0scA+Ni0AOvS
        wgDnz8QA08rOAObNwADx0bMA8NC1APPSrADrzbcA5cu9AOTJuwDvza8A4ci7AOPHuQDuzKsA58izAP/P
        nADixrgA9s2iAOLEtgD60JUA6MesAOvIpwDhw7QA6MWrAODBsgDfv68AwrjAAOa5rADdu6sA472hALOz
        xgC3s8MA27mpAOW9nQDcuacA+8d8AOOzqgDbt6UA/MV4AOu7kQDataMAurSvANq0oQDWs6IA4K+mAK2u
        ugDZs58A/8RtAPjBdQDKr6gA2LGdANiwnADOrKYA4bSPAPe+cgDXr5sA/8FkANatmQDop50A4rGJANas
        lwDLqKIA77R8ALClsADdrosA1aqUANSpkwD/vVsAyKSfANOmkADeq4AA1qmFANmpgwDeqn4A/7pSAMef
        mQD2smIA0aONAMygjgDQoYkAz6CIAP+2SgBFnL8Azp2FAP+0QwDNm4IA/7E9AMyYfgCllocAypV7AP+u
        NgCAiK8A/60yAHCMpgD/rDEAxJF7AMiSdwDpoUsAcYWpAP+qKwAThckAoYmLANqWWgD3ozUAxo1xAOab
        RgD/pyQAJ4W1AMWLbgAtgrcA/6UeAPefKAAnfLYA/6MaAP+iFgC7gmwAuodgADN3sAD/oBEAx4NaAOuV
        KQC/gGAA/54NAE14mQD4mxUAv39gAP+cCADkjigAvXtaAP+aAwD+mQAAMm2gALx4VwDYhjEA3ognAPyW
        AADOfjsA+pMAAPmSAAC6dFEAE2apANaBKwDYgScA9Y8AAMx7NQDyjAAAt29LAPCKAACLbF0AzHgtANF6
        JgAGY5sApGtRAO2GAAAAAAAAtmlJAOuEAADMdSYA6IIAAMt0JQAAXZkAzHMgAOV+AADifAAAsmU+AOB5
        AADMbxcA3XcAANx1AACyYTQA2HIAALBcOQDMbA8Arl01AJlbOwDUbgAAbldLAMxoBwCrVy8Az2gAAMxm
        AACqUzEAyWMAAIVWMADaXAUAxmAAAHRPPQBNTU0ArlMYAMlXAABhRzsAwFEAAK9OCwCbRx0AZUQzAKFD
        FAC3SQAAsUYAAJ5AEQCfPg4ArEEAAJE7EgChPQYAnjwFAKY9AABaNiQAlT0AAJs4BwCgOQAAmzgDAJk3
        BQBaMR8AmTMAAJUvAABkKREAfyoAAIIoAAByJQkAcSQHAIEhAAAdDwgAvb29vb29vb29vb29vb29vb29
        vb29vb29vb29vb29vb29vb29vb29vb29vd7e3t7evb29vb29vb29vb29vb29vb29vb29vb29vb3e9ffy
        /fne3t7e3r29vb29vb29vb29vb29vb29vb293vXX9/f39/f+/fn23t7e3r29vb29vb29vb29vb29vd7u
        0tb35jUveMfq9/f+/fn23t7evb29vb29vb29vb3e7s3N0uq1LxohKzNRi9Dq9/7+/N69vb29vb29vb29
        3u3Iys3S6a4rFx4kLDk/SFVyoNXQ4d69vb29vb29vd7sxcXIy83priYTGh8rMzw/S1plcHZx3r29vb29
        vb295L+/xcbKy+anJBEWHiQzRUtRVV9ocm7evb29vb29vb3ctrzBxcbK5qMfEBMaIXJ2dnNyX2Rwbt69
        vb29vb29vdy0vL/BxcjmoBoMERZWe0xDSHx8XGhn3r29vb29vb292bK0vL/FxuacFwoQE46Hr8O6nnpW
        ZGfevb29vb29vb3ZrbS2vMHF6eUXBwsQJRwhLmKQRU1cZ969vb29vb29vdessrS8v8H6/xMGCgwRGB8k
        Lzk/SFZg3r29vb29vb2916qtsrS8v/r/EwMHCxATGiErMzxDS2Devb29vb29vb3XpaqttLa8+toeDQYI
        DBEXHiQsOT9IV969vb29vb29vdSlqqyytLaaNGtpbJdjQEQmMSYzPE5X3r29vb29vb291KGlqq2ybwQC
        CSIqMGNqMmHw3dO3+969vb29vb29vb3PmaSlqpIPAAACDy0oJx1Pu9Hf4/H73r29vb29vb29vc+UnaWq
        rIoOAAEFFTodR5aPc2hzevjevb29vb29vb29yY2VoaWqrasOAQUbEj6Cdl9aZXB29969vb29vb29vb3J
        hpGZpKWqwiAUSoldcVVISFFfaHLz3r29vb29vb29vcSBjZSdpaq5CyM3a3h6dnZwXFplcO/evb29vb29
        vb29xHmGjZWhpbEIDBFQdZOmgIhlUVxo6969vb29vb29vb3Ad32GkZmkqQcLEEFCPX6FmFRLVmTo3r29
        vb29vb29vbh0eX+NlJ2iBAgMERYeJCw1PEVRXOfevb29vb29vb29uG10eYGNlZsDBgoQExgfJi87P0tV
        4t69vb29vb29vb2zZm13fYaRkgIECAwRFhwkKzU8RU3i3r29vb29vb29vbNbZnR5f42fRklTWSknLTg4
        Lzk/SODevb29vb29vb29q1JbSTYZERYcISYsWFheaWyEjKiw2969vb29vb29vb3MzMzMzI+Ddj8/P3h4
        j6e+vr7O2NXMvb29vb29vb29vb29vb2+vr6+vr6+vr6+vr69vb29vb29vb29vf//////4P///8AH//+A
        AH//AAAP/gAAD/wAAAf4AAAH+AAAB/gAAAf4AAAH+AAAB/gAAAf4AAAH+AAAB/gAAAf4AAAH+AAAD/gA
        AA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAB//gAf/KAAAADAA
        AABgAAAAAQAIAAAAAACACgAAAAAAAAAAAAAAAAAAAAAAAP///wD+/PsA/fn2APr18gD68+4A+/HoAPfv
        6wD17OcA9erkAPzt2gDz5+AA/OjSAPHj3ADw4dkA++HPAO/f1gD648kA7tzTAPvcxwDr2dEA8dvJAOvY
        zgD63L8A69fNAPzcuAD/1MYA8tjCAOrUyQD/1rwA8ta+APzZrwDo0cUA8tO4AOfPwwD41LAA5czAAOjL
        ugDkybwA/NCkAOPHuQDuy6sA4ca4APrNoADGwcoA4sS1AP/LlgDgwrMA5sSqAPDGoADgwLEA8sSbAN6+
        rgDpw58A5sGkAPrKhwDdu6wA/bOvAPzJggDduqkA6L6cAK23uwDcuKYAz7apAN23oQDwv4oA5LqXANq1
        owD/xnIA9cF9ANmzoADYsp8A47eQANixngDYsZ0A7biFANevmwD3vnEA77p6ALGnswDSrZoA1q2YAP/A
        YwDrtn4A4LGLAPa7bQDVq5UA9blrAP++XACvo60A1KmTAOqydwDUp5EA3KqGANOnjwDTo5QA/7tUANKk
        jQDlrXQAn52sAOmscADmrHAA/7hMANinewDRoIoA3qZ2AKmZoQDPn4cAdJa6AHaWuADpqWcAy5iRAP2z
        SQDOnYQAzZyEAP+0QgAnlc4A0p1+AMyagQBxlqkAJZLLAFqXqwAxksMA/7A6AMuXfgDsp1IA6qRQAP+t
        MwDJk3kANorAANiZZQDmoFEAyJJ2AIuLlwD/qy0A6aBKADSEwABwhqYAGoW/AMaNcADgmE4A/KYoAP+n
        JAC6inUAxY1oAP+lHgDDiGwA25NMAGR7pgDBh2kA/6MZAMKFZgAmerQA145KAL+DZgD/oRMA/J8XAPSb
        IAD/nw4Av4BgANKIRwD2mRYA/50JAPeYFACneW0AAG67AAZuuADGflEA/5sDALx7WgDzkxQAa3KDAP6Z
        AAD6lgYAyX5EALt3VAD8lQAAAG2rALl2VAD2kgUAJmejAPmSAAAAa6UAuXNPACZlngAFZakAwXZCAPSO
        AADwiwQA8YoAAO6IAAATXqEAAAAAAOuFAAC9bzwAtWtGAOiCAAAAX5kA5oABACVUngDkfgAAsWU+AOB6
        AAAGUJoA23UAAMxsFADXcAAAbVlOANJrAACsWTAAd1BOALhcGQCpVCkAyl0AAE1NTQBiTkIApkwgAI9H
        LgDEVAAAslAKAF9GOQC4UAAAqEkTAIVDKwCqSQ0AtUsAAKFEFQCgQhMAqkYFAH89IQCvQwAAqUMAAJ08
        DACmQAAASTcuAGA3JQCjPQAAoDoAAGAzIACaNgIAgjATAIEwEwCMMwUAmTMAAHQyDwCFLgMAki0AAHIu
        AAB/KgAAQCUXAIEhAABDIxIAViMAACIZFQA+GQAACwgHAAAAAAC/v7+/v7+/v7+/v7+/v7+/v7+/v7+/
        v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v9XV1dW/v7+/v7+/v7+/v7+/
        v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/1fDw287V1dXVv7+/v7+/v7+/v7+/v7+/v7+/v7+/
        v7+/v7+/v7+/v7+/v7+/v7/V8PXy8vLt7dvO1dXVv7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/
        v7+/v9Xw5ezy8vLy8u7y7erW1dXV1b+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/1fDlz+zy8vLy
        8vLy8vLu8u3q1tXV1b+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7/V8OXPz+vy8sIVOp7X8vLy8vLy7u3t
        6tXV1dW/v7+/v7+/v7+/v7+/v7+/v7+/v9Xv5c3Nz+vuwrYTFxshI0uo1/Ly8vLy8vLt7erV1b+/v7+/
        v7+/v7+/v7+/v7+/1eTgy8vNzevisa4RFRsfIyUpLjNgsdfu8vLy8vL51b+/v7+/v7+/v7+/v7+/v7/V
        3uDJy8vNzevisa4PExcbHyMnLDE3PUJJcbHX7vL51b+/v7+/v7+/v7+/v7+/v9Xe4MfJycvLzeviqKgN
        ERUbHyElKS4zOj1FS1VbYIOe0dW/v7+/v7+/v7+/v7+/1djcw8fHycnLy+viqKgMDxEXGx8jJywxMz1C
        SFBZXWdqddW/v7+/v7+/v7+/v7+/5tzAwMPHx8nJy+vinqgKDQ8TFx8hJScuMzo9RUtQWWBncdW/v7+/
        v7+/v7+/v7+/6Ly9wMPFx8nJy+vinp4KDA0RFRsfJ1BbW1VVUElLWV1gatW/v7+/v7+/v7+/v7+/5ry9
        wMDDxcfJyevilpkICg0PExcldXBwcHBqampQUFlgZ9W/v7+/v7+/v7+/v7+/5rq8vcDAw8fHyevilpYH
        CgwNERV7insxM0Vwg391S1VbYNW/v7+/v7+/v7+/v7+/5rq8vL3Aw8XHyejhlJEHCAoNDxeqiaS+xpNY
        SZSKS1BZXdW/v7+/v7+/v7+/v7+/5rS6vL29wMPFx+jhkZEGBwoMDSuwh2uzxMTEuKNdRktVW9W/v7+/
        v7+/v7+/v7+/5rS6ury9wMDDx+jhlLEEBggKDBMVFxsfI06TeYQ9QklQWdW/v7+/v7+/v7+/v7+/5rS0
        ury8vcDDxej0/7EDBgcIDA0RFRsfIyUpYjc6PUVLVdW/v7+/v7+/v7+/v7+/5q+0tLq8vb3Aw+j3/7ED
        BAYICgwPERcbHyMnLDE3PUJJUNW/v7+/v7+/v7+/v7+/5quvtLq6vL3AwOj3/64CAwYHCAoNERMXHyEl
        KS4zOj1FS9W/v7+/v7+/v7+/v7+/5quvtLS6vLy9wOj3/64CAwQGBwoMDxEVGx8jJywuMz1CSNW/v7+/
        v7+/v7+/v7+/5qurr7S0ury9vej3+K4HBwMGBwgKDQ8TFxshIycuMzo9RdW/v7+/v7+/v7+/v7+/5qer
        q6+0urq8vebTZi1KaI9TaC40FxQRFRsfIyUsLjM6QtW/v7+/v7+/v7+/v7+/5qGnq6+0tLq6vNI1CRg1
        JlxmZkpmZFpjXFpGTz4uLDE6PdW/v7+/v7+/v7+/v7+/452hq6uvtLS6qTABAAsQEAsvGDUiRzImLab6
        /vzb6Y6uRtW/v7+/v7+/v7+/v7+/45qdp6urr7ScJgEAAAAQEBILIBYoIh4ckeTz8ez2+/311b+/v7+/
        v7+/v7+/v7+/45Waoaerr6+iKgEAAAACEhodECAWGBxumZaxg7nB0tr11b+/v7+/v7+/v7+/v7+/45CV
        naGrq6+0ojABAAACAxodIBYWGW6ZkYpbWWBncbn11b+/v7+/v7+/v7+/v7+/442Qmp2nq6uvtMwyAQAC
        AwUdJBASXo57cUtQVV1narny1b+/v7+/v7+/v7+/v7+/44WNlZqhp6uvr9SBNAECBD8OCxlee2BZQkVL
        UFlgZ63u1b+/v7+/v7+/v7+/v7+/436MkJWdoaurr89oDzsDQW9mOGdnRkI3OkJGS1VdYK3s1b+/v7+/
        v7+/v7+/v7+/436FjZCanaerq89oChFcUm2fe3FgYF1dWUhFS1BZYK3r1b+/v7+/v7+/v7+/v7+/33p+
        hY2VmqGnq81hCAoMDycxaopxdXWDf3tIRktVW5/o1b+/v7+/v7+/v7+/v7+/33J6foyQlZ2hq8thBwgK
        DRE8eHeXt3aIaZZLQklQWZ/m1b+/v7+/v7+/v7+/v7+/33J6foWNkJqdp8taBggKDA9spXOXysTEtYA9
        QkVLVZjl1b+/v7+/v7+/v7+/v7+/32Vyen6FjZWaoclaBAcICg0PExcbISUpWGI3PUJJUJjg1b+/v7+/
        v7+/v7+/v7+/319vcnp+jJCVncVNBAYHCgwNERUbHyMlJy4zOj1FS5Lg1b+/v7+/v7+/v7+/v7+/319l
        cnp+hY2QmsBNAwQHCAoNDxMXGyEjJywxNz1CSYvc1b+/v7+/v7+/v7+/v7+/31dfZXJ6foWNlbtEAgQG
        BwoMDREVGx8jJScuMzo9RYvc1b+/v7+/v7+/v7+/v7+/3VFXX29yen6MjbtEAgMEBwgKDA8RFxshIycs
        MTc6QoLZ1b+/v7+/v7+/v7+/v7+/3VFXX2Vyen6FjbJEAQIEBgcKCg0RFRcfISUnLjM6PYLZ1b+/v7+/
        v7+/v7+/v7+/3UNRV19lcnp+haybjIyMjG9MTFRWQCgoNDQvLDEzOn3U1b+/v7+/v7+/v7+/v7+/3UNR
        UVdfVzYgDw8TFxsfIzQ7QUFHZHx9fYaGnKCgoKDU1b+/v7+/v7+/v7+/v7+/3UM2HgsGBwgKDA8RFRsb
        ISMlKS4zNz1GcHV1dbbQ0NjYv7+/v7+/v7+/v7+/v7+/7tPT09PIwsKucHBdNzc3N11wcKjC0NDQ0NDQ
        0NC/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7/IyMjIyMjIyMjI0NC/v7+/v7+/v7+/v7+/v7+/v7+/
        v7////////8AAP//h////wAA//8Af///AAD//gAP//8AAP/8AAD//wAA//gAAB//AAD/8AAAAf8AAP/g
        AAAAfwAA/8AAAAB/AAD/gAAAAH8AAP8AAAAAPwAA/gAAAAA/AAD+AAAAAD8AAP4AAAAAPwAA/gAAAAA/
        AAD+AAAAAD8AAP4AAAAAPwAA/gAAAAA/AAD+AAAAAD8AAP4AAAAAPwAA/gAAAAA/AAD+AAAAAD8AAP4A
        AAAAPwAA/gAAAAA/AAD+AAAAAD8AAP4AAAAAPwAA/gAAAAA/AAD+AAAAAH8AAP4AAAAAfwAA/gAAAAB/
        AAD+AAAAAH8AAP4AAAAAfwAA/gAAAAB/AAD+AAAAAH8AAP4AAAAAfwAA/gAAAAB/AAD+AAAAAH8AAP4A
        AAAAfwAA/gAAAAB/AAD+AAAAAH8AAP4AAAAAfwAA/gAAAAB/AAD+AAAAAH8AAP4AAAAAfwAA/gAAAAB/
        AAD+AAAAAP8AAP4AAAAP/wAA//4AH///AAA=
</value>
  </data>
</root>