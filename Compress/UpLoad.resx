<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADo0L398uj98uf+7+P97+L97N/97N786trEZTOM
        SSX73cP73cP73cP73cP90r/WlIe2trbRy8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAADs1MD99ezLm4/Lm4/Lm4/97+P97uL97N/HZzTirJCMSSX73cP73cOMSSWMSSWiUyqSSyaS
        Sya2trbRy8gAAAAAAAAAAAAAAAAAAAAAAACAAACAAACAAACAAACAAACAAACAAACAAAD99e3+8+r+8un9
        8Ob98OT87uH97N/fx7eAgICpVyyuWi7irJDv0cHovKXgpojUhVuuWi6SSybRy8gAAAAAAAAAAAAAAAAA
        AADMADPcSQDcSQDiYx7iYx7ofDuAAAD+9vD+9e/+9Oz99Or98ej98Ob97+P97uH97d/AwMDHZzT89/T6
        8Orz3dHpwKvjqozcmXXXiF/OckKSSybRy8gAAAAAAAAAAAAAAADcSQDcSQDiYx7iYx7ofDuAAAD03Mf/
        +fXImY/ImY/ImY/ImY/ImY/ImY/ImY/97+T97uH25t3////68ezvzr3gpojXjGXXiF/UhVvTgFXOckKS
        SybRy8gAAAAAAAAAAADcSQDiYx7iYx7ofDvofDvriUqAAAD++/f/+vX++PL+9/H+9e7+9Oz98+n+8ej+
        8eb97+P////9+vn14NXjqozUhVvPdUXOcUDRdkfTgFXOckKSSya2trYAAAAAAAAAAADiYx7iYx7ofDvo
        fDvriUrriUrullmAAAD//Pn++vf++fX++PL+9vH+9e3+9Oz98+r+8ef////68ezrxLDZk23QeEnOckLE
        ZTOmVSqaTyiyXC6KRyS2trYAAAAAAAAAAADiYx7ofDuAAADriUrriUrullnullnxo2iAAAD//Pj/+vf+
        +fT++PP+9u/99e399O398+n////77+jnuaHXjGXRe02yXC6KRyTNbjzRdke4XzCiUyqiUyrRy8gAAAAA
        AADofDuAAAAAAADMADPullnullnxo2jxo2j0r3aAAADy0bPvzbDuzK/oxqzmxKrlw6ngvqf////68ezr
        xLDZk23QeEmOSSXnuaHmt57eoYHXjGXPdUWiUyrBYzLRy8gAAADMADMAAAAAAAAAAADMADPxo2jxo2j0
        r3b0r3b3vIWAAAAAAAAAAAAAAADriUrriUrMADP////9+vnz3dHlsJLBYzLXjGX14NXtzLvmt57eoYHX
        jGXBYzKiUyrOzs4AAAAAAAAAAAAAAAAAAAAAAADMADP0r3b0r3b3vIX3vIX6yZSAAADriUrriUrriUrM
        ADOZZgDnuaH////89/Tz3dHHZzTls5j68ez14NXtzLvmt57eoYHTflKiUyrOzs4AAAAAAAAAAAAAAAAA
        AAAAAAAAAADMADP3vIX3vIX6yZT6yZT91qOAAACAAADMADPMADMAAADBnIjtzLv////9+vnblnHZk23+
        /f368ez14NXtzLvmt57TflKiUyrRy8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD3vIX6yZT6yZT91qP9
        1qP/4rH/4rH/mWYAAAAAAAAAAADBnIjQeEnovKXuy7iWTSf46uP+/f368ez14NXsxrKiUyrBYzIAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADG
        r6PBnIjQeEnQeEmaTyjeoYHv0cHirJCpVyyiUyoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBnIjQeEnQeEnG
        r6MAAAAAAAAAAAAAAAD//g////wD///4Af//+AD//gDAf/wAACf8AAAH/AAAB/wAAAf8AAAH/AAAB/wA
        AAf8AAH//AAB//wAAf/8AAH//AAB//wAAP/8AAA/AAAAHwAAAA8AAAAHAAAABwAAAAcAAAADIAAAAXAc
        AAH4AAAB/ACAAf4BwAP//+AH////Dw==
</value>
  </data>
</root>